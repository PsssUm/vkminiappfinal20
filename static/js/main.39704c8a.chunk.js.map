{"version":3,"sources":["img/link_icon.svg","img/text_icon.svg","panels/HistoryItem.js","img/empty_history.svg","panels/QRcods.js","img/qr_code_active.svg","img/qr_code.svg","img/history_active.svg","img/history.svg","panels/Stories.js","App.js","index.js"],"names":["HistoryItem","props","linkify","inputText","replacePattern1","replacePattern2","replacePattern3","replace","link","this","history_item","value","isUrl","includes","className","src","link_icon","text_icon","dangerouslySetInnerHTML","__html","React","Component","QRcods","onBridgeResult","e","detail","type","dataItem","state","history","length","data","code_data","push","setState","bridge","send","keys","historyResult","openScanner","qrResult","undefined","subscribe","separator","onClick","size","stretched","style","marginTop","marginBottom","reverse","map","item","index","empty_history","Stories","openStories","App","MainView","withAdaptivity","viewWidth","platform","usePlatform","useState","activeStory","setActiveStory","onStoryChange","currentTarget","dataset","story","isDesktop","ViewWidth","TABLET","hasHeader","VKCOM","header","justifyContent","animate","spaced","width","maxWidth","tabbar","selected","text","history_active","qr_code_active","qr_code","id","activePanel","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39704c8a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/link_icon.eb89ac93.svg\";","export default __webpack_public_path__ + \"static/media/text_icon.34274a94.svg\";","import React from 'react';\nimport link_icon from '../img/link_icon.svg'\nimport text_icon from '../img/text_icon.svg'\nclass HistoryItem extends React.Component {\n   \n\tconstructor(props){\n\t\tsuper(props)\n\t}\n    linkify = (inputText) => {\n        var replacedText, replacePattern1, replacePattern2, replacePattern3;\n    \n        //URLs starting with http://, https://, or ftp://\n        replacePattern1 = /(\\b(https?|ftp):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/gim;\n        replacedText = inputText.replace(replacePattern1, '<a href=\"$1\" target=\"_blank\">$1</a>');\n    \n        //URLs starting with \"www.\" (without // before it, or it'd re-link the ones done above).\n        replacePattern2 = /(^|[^\\/])(www\\.[\\S]+(\\b|$))/gim;\n        replacedText = replacedText.replace(replacePattern2, '$1<a href=\"http://$2\" target=\"_blank\">$2</a>');\n    \n        //Change email addresses to mailto:: links.\n        replacePattern3 = /(([a-zA-Z0-9\\-\\_\\.])+@[a-zA-Z\\_]+?(\\.[a-zA-Z]{2,6})+)/gim;\n        replacedText = replacedText.replace(replacePattern3, '<a href=\"mailto:$1\">$1</a>');\n    \n        return replacedText;\n    }\n\trender() {\n        const link = this.linkify(this.props.history_item.value)\n        const isUrl = link.includes(\"</a>\")\n        return (\n            <div className=\"history_item\">\n                <img src={isUrl ? link_icon : text_icon}/>\n                <div>\n                    <p className=\"history_item_title\">{isUrl ? \"Ссылка\" : \"Текст\"}</p>\n                    {isUrl ? <p className=\"history_max_w\" dangerouslySetInnerHTML={{__html: link}}/> : <p className=\"history_item_text history_max_w\">{this.props.history_item.value}</p>}\n                </div>\n            </div>\n        )\n\t}\n  }\n  export default HistoryItem;","export default __webpack_public_path__ + \"static/media/empty_history.ac23b3ce.svg\";","import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Button, Separator, PanelHeader } from '@vkontakte/vkui';\nimport HistoryItem from './HistoryItem';\nimport empty_history from '../img/empty_history.svg'\n\nclass QRcods extends React.Component {\n   \n\tconstructor(){\n        super()\n        this.state = {\n            qrResult : undefined,\n            history : []\n        }\n    }\n    componentDidMount(){\n        bridge.subscribe(this.onBridgeResult);\n        bridge.send(\"VKWebAppStorageGetKeys\", {\"count\": 100, \"offset\": 0})\n    }\n    onBridgeResult = (e) => {\n        // this.setState({bridgeResult : this.state.bridgeResult + \" \" + e.detail.type})\n        // console.log(\"bridge e = \" + JSON.stringify(e.detail.type))\n        switch (e.detail.type) {\n            case \"VKWebAppOpenCodeReaderResult\":\n                const dataItem = { \"key\" : this.state.history.length + \"\", \"value\" : e.detail.data.code_data }\n                var history = this.state.history\n                history.push(dataItem)\n                this.setState({history : history})\n                bridge.send(\"VKWebAppStorageSet\", dataItem)\n            break;\n            case \"VKWebAppOpenCodeReaderFailed\":\n                \n            break;\n            case \"VKWebAppStorageGetKeysResult\":\n                bridge.send(\"VKWebAppStorageGet\", {\"keys\": e.detail.data.keys});\n            break;\n            case \"VKWebAppStorageGetResult\":\n                const historyResult = e.detail.data.keys\n                if (historyResult.length > 0){\n                    this.setState({history : historyResult})\n                }\n            break;            \n      \n            default:\n            break;\n        }\n    }\n    openScanner = () => {\n        bridge.send(\"VKWebAppOpenCodeReader\")\n        // .then(data => { \n        //         this.setState({flashDetails : \"\"})\n        // }) \n        // .catch(error => { \n        //     this.setState({flashDetails : \"Нет доступа к Камере\"})\n        // });\n    }\n    \n\trender() {\n\t  return (\n\t\t<div className=\"qrcodes_container\">\n            <PanelHeader separator={false}>QR-коды</PanelHeader>\t\n            <div className=\"qr_button\">\n                <Button onClick={this.openScanner} size=\"l\" stretched style={{ marginTop: 16, marginBottom : 28 }}>Сканировать QR-код</Button>\n            </div>\n            \n            <Separator />\n            {this.state.history.length > 0 ? <div>\n                <p className=\"qr_count\">Отсканировано: {this.state.history.length}</p>\n                {this.state.history.reverse().map((item, index) => (\n                    <HistoryItem  index={index} history_item={item} key={index} />\n                ))}\n            </div> :\n             <div className=\"empty_qr_cods\">\n                    <img className=\"empty_qr_cods_icon center_horizontal\" src={empty_history}/>\n                    <p className=\"empty_qr_cods_text center_horizontal\">Здесь будет отображаться история сканирования QR-кодов</p>\n            </div>}\n\n        </div>\n\t  )\n\t}\n  }\n  export default QRcods;","export default __webpack_public_path__ + \"static/media/qr_code_active.96c76ad6.svg\";","export default __webpack_public_path__ + \"static/media/qr_code.16cfae85.svg\";","export default __webpack_public_path__ + \"static/media/history_active.e8e479f5.svg\";","export default __webpack_public_path__ + \"static/media/history.f8a4b063.svg\";","import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Button, Separator, PanelHeader } from '@vkontakte/vkui';\n\nclass Stories extends React.Component {\n   \n\tconstructor(){\n\t\tsuper()\n    }\n    \n    openStories = () => {\n        const sticker = {\"sticker_type\" : \"renderable\", \n            \"sticker\" : { \"content_type\" : \"image\", \n            // \"url\" : \"https://i.ibb.co/tC7WRhx/image-1.png\", \n            \"clickable_zones\" : [\n                {\"action_type\" : \"link\", \n                    \"action\" :  { \n                    \"link\": \"https://vk.com/app7601800\", \n                    \"tooltip_text_key\": \"tooltip_open_default\" }\n                }\n            ]}\n        }\n        bridge.send(\"VKWebAppShowStoryBox\", { \"background_type\" : \"image\", \"url\" : \"https://sun9-65.userapi.com/c850136/v850136098/1b77eb/0YK6suXkY24.jpg\" , \"stickers\" : [sticker]}); \n    }\n\n\trender() {\n\t  return (\n\t\t<div className=\"\">\n            <PanelHeader separator={false}>Истории</PanelHeader>\t\n            <div className=\"qr_button\">\n                <Button onClick={this.openStories} size=\"l\" stretched style={{ marginTop: 16, marginBottom : 28 }}>Создать сторис</Button>\n            </div>\n        </div>\n\t  )\n\t}\n  }\nexport default Stories;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { View, ScreenSpinner, Tabbar, TabbarItem, Epic ,AdaptivityProvider, AppRoot, withAdaptivity, usePlatform, ViewWidth, VKCOM, SplitLayout, SplitCol,Group, Panel, Cell, PanelHeader, Title } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './styles/styles.css'\nimport QRcods from './panels/QRcods';\nimport qr_code_active from './img/qr_code_active.svg'\nimport qr_code from './img/qr_code.svg'\nimport history_active from './img/history_active.svg'\nimport history from './img/history.svg'\nimport Stories from './panels/Stories';\nclass App extends React.Component {\n   \n\tconstructor(){\n\t\tsuper()\n\t}\n\n\trender() {\n\t  return (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<MainView/>\n\t\t\t\t\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t  )\n\t}\n  }\n  export default App;\n  \n  const MainView = withAdaptivity(({ viewWidth }) => {\n\tconst platform = usePlatform();\n\tconst [activeStory, setActiveStory] = React.useState('histories');\n\tconst onStoryChange = (e) => setActiveStory(e.currentTarget.dataset.story);\n\tconst isDesktop = viewWidth >= ViewWidth.TABLET;\n\tconst hasHeader = platform !== VKCOM;\n  \n\treturn (\n\t  <SplitLayout\n\t\theader={hasHeader && <PanelHeader separator={false} />}\n\t\tstyle={{ justifyContent: \"center\" }}\n\t  >\n\t\t\n  \n\t\t<SplitCol\n\t\t  animate={!isDesktop}\n\t\t  spaced={isDesktop}\n\t\t  width={isDesktop ? '560px' : '100%'}\n\t\t  maxWidth={isDesktop ? '560px' : '100%'}\n\t\t>\n\t\t<Epic activeStory={activeStory} tabbar={!isDesktop &&\n\t\t\t<Tabbar>\n\t\t\t<TabbarItem\n\t\t\t\tonClick={onStoryChange}\n\t\t\t\tselected={activeStory === 'histories'}\n\t\t\t\tdata-story=\"histories\"\n\t\t\t\ttext=\"Истории\"\n\t\t\t  > <img src={activeStory === 'histories' ? history_active : history}/>\n\t\t\t  </TabbarItem>\n\t\t\t  <TabbarItem\n\t\t\t\tonClick={onStoryChange}\n\t\t\t\tselected={activeStory === 'scanner'}\n\t\t\t\tdata-story=\"scanner\"\n\t\t\t\ttext=\"QR-коды\"\n\t\t\t  ><img src={activeStory === 'scanner' ? qr_code_active : qr_code}/>\n\t\t\t</TabbarItem>\n\t\t\t  \n\t\t\t \n\t\t\t</Tabbar>\n\t\t  }>\n\t\t\t<View id=\"histories\" activePanel=\"histories\">\n\t\t\t  <Panel id=\"histories\">\n\t\t\t\t<Stories/>\n\t\t\t  </Panel>\n\t\t\t</View>\n\t\t\t<View id=\"scanner\" activePanel=\"scanner\">\n\t\t\t  <Panel id=\"scanner\">\n\t\t\t\t<QRcods/>\n\t\t\t  </Panel>\n\t\t\t</View>\n\t\t\t\n\t\t  </Epic>\n\t\t</SplitCol>\n\t  </SplitLayout>\n\t);\n  }, {\n\tviewWidth: true\n  });\n  \n  <MainView />\n  ReactDOM.render(\n\t<App/>\n  ,\n  document.getElementById('root')\n  );","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}